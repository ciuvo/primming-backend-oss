# Generated by Django 3.2.3 on 2021-07-13 08:32

import django.db.models.deletion
from django.db import migrations
from django.db import models

from primming.registration.models import TypeConversionValue


def forwards_func(apps, schema_editor):
    """
    Migrate from PersionalAttribute inheriting from TypeConversionValue to it having a relation
    with PersonalAttributeValue.
    """
    PersonalAttribute = apps.get_model("registration", "PersonalAttribute")
    ValueMatch = apps.get_model("registration", "ValueMatch")
    PersonalAttributeValueName = apps.get_model("registration", "PersonalAttributeValueName")
    db_alias = schema_editor.connection.alias

    for type, (lookup, _, _) in TypeConversionValue.VALUETYPE_FIELDNAME_LOOKUP.items():
        attrs = PersonalAttribute.objects.using(db_alias).filter(value_type=type.value).all()
        for attr in attrs:
            values = ValueMatch.objects.using(db_alias).filter(
                value_type=type.value,
                definition__name=attr.name,
            )

            if values.count() > 1:
                try:
                    value = values.get(**{lookup: getattr(attr, lookup)})
                except BaseException as e:
                    continue
            else:
                value = values[0]

            pa_value, _ = PersonalAttributeValueName.objects.using(db_alias).get_or_create(
                name=value.display_name,
            )

            attr.named_value = pa_value
            attr.save()


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("registration", "0004_alter_fielddefinition_widget"),
    ]

    operations = [
        migrations.CreateModel(
            name="PersonalAttributeValueName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name used to render the field value (e.g. in a select box)",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="personalattribute",
            name="value_name",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration.personalattributevaluename",
            ),
        ),
        migrations.RunPython(forwards_func, reverse_func),
    ]
